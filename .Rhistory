usethis::use_test()
library(shinytest2)
devtools::document()
devtools::load_all()
shinytest2::use_shinytest2()
dir <- "R/"
shinytest2::record_test(dir)
shinytest2::record_test(dir)
sessionInfo()
golem::use_module_test()
shiny::runTests()
library(devtools)
devtools::load_all()
library(shinytest2)
shinytest2::record_test()
shinyAppDir()
testthat::test_local()
rlang::last_error()$app
TestAnaAPP()
shinytest2::load_app_env()
s <- shinytest2::load_app_env()
s
s$s
s$.Random.seed
shinyAppDir(x)
debug(shinyAppDir)
debug(shinyAppDir())
debug(shinyAppDirï¼‰
debug(shinyAppDir)
library(shinytest2)
test_that("{shinytest2} recording: TestAnaAPP", {
# Don't run these tests on the CRAN build servers
skip_on_cran()
#shiny_app <- TestAnaAPP()
app <- AppDriver$new(name = "TestAnaAPP", height = 803, width = 1407)
# app <- AppDriver$new(name = "TestAnaAPP", height = 803, width = 1407)
app$set_inputs(sidebarmenu = "loading")
app$set_inputs(sidebarItemExpanded = "ExploratoryFactorAnalysis")
app$set_inputs(EFA_method = "Maximum Likelihood Factor Analysis")
app$set_inputs(rotation_method = "Promax")
app$expect_values()
app$set_inputs(sidebarmenu = "path_plot")
app$set_inputs(sidebarItemExpanded = "ConfirmatoryFactorAnalysis")
app$set_inputs(CFA_plot_height = 1050)
app$expect_values()
app$set_inputs(sidebarmenu = "IRTmodelfit")
app$set_inputs(sidebarItemExpanded = "ItemResponseTheory")
app$set_inputs(modelselect = "Two parameters logistic model (2PL)")
app$expect_values()
app$set_inputs(sidebarmenu = "IRTassum_test")
app$set_inputs(IRT_select_independent = "LD-X2 (Chen & Thissen, 1997)")
app$expect_values()
app$set_inputs(sidebarmenu = "IRTitemfit")
app$set_inputs(IRT_itemfit_method = "chi-squared method (Bock,1972)")
app$expect_values()
app$set_inputs(sidebarmenu = "MIRTmodelfit")
app$set_inputs(sidebarItemExpanded = "MultidimensionalIRT")
app$set_inputs(modelselect1 = "Rasch model (1PL)")
app$set_inputs(include_cov = "Yes")
app$expect_values()
app$expect_values()
app$set_inputs(sidebarmenu = "MIRTperson")
app$set_inputs(MIRT_person_est_method = "maximum likelihood (ML)")
app$expect_values()
app$set_inputs(sidebarmenu = "CRM_itemfit")
app$set_inputs(sidebarItemExpanded = "ContinuousResponseModel")
app$set_inputs(wright_dim_select = "F1")
app$set_inputs(MIRT_dim_select = "F1")
app$set_inputs(CRM_fit_group = 33)
app$expect_values()
})
?skip_on_cran()
devtools::document()
